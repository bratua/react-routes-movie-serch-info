{"version":3,"file":"static/js/263.f0cd774c.chunk.js","mappings":"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","sources":["API/API.jsx","Pages/MovieDetails.styled.jsx","components/MovieCard/MovieCard.styled.jsx","components/MovieCard/MovieCard.jsx","Pages/MovieDetails.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_OPTIONS = {\n  apiKey: 'bcb23eb0e57eead85fe68d64f412ef39',\n  apiBaseUrl: 'https://api.themoviedb.org/3/',\n};\n\naxios.defaults.baseURL = API_OPTIONS.apiBaseUrl;\n\nexport const getTrendingMovies = async (mediaType, period) => {\n  const searchUrl = `trending/${mediaType}/${period}?api_key=${API_OPTIONS.apiKey}`;\n  const response = await axios.get(searchUrl);\n  const results = response.data.results;\n  //   console.log(results);\n\n  return results;\n};\n\nexport const getMovieDetailsById = async movieId => {\n  const searchUrl = `movie/${movieId}?api_key=${API_OPTIONS.apiKey}`;\n  const response = await axios.get(searchUrl);\n  const results = response.data;\n  //   console.log('API getMovieById  ==> ', response.data);\n\n  return results;\n};\n\nexport const getMovieCastById = async movieId => {\n  const searchUrl = `movie/${movieId}/credits?api_key=${API_OPTIONS.apiKey}`;\n  const response = await axios.get(searchUrl);\n  const results = response.data.cast;\n  // console.log('API getMovieCreditsById  ==> ', results);\n\n  return results;\n};\n\nexport const getMovieReviewsById = async movieId => {\n  const searchUrl = `movie/${movieId}/reviews?api_key=${API_OPTIONS.apiKey}`;\n  const response = await axios.get(searchUrl);\n  const results = response.data.results;\n  // console.log('API getMovieReviewsById  ==> ', results);\n\n  return results;\n};\n\nexport const getMovieByName = async query => {\n  const searchUrl = `search/movie?api_key=${API_OPTIONS.apiKey}&query=${query}`;\n  const response = await axios.get(searchUrl);\n  const results = response.data.results;\n  // console.log('API getMovieByName  ==> ', results);\n\n  return results;\n};\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Wrapper = styled.div`\n  margin: 0px;\n`;\n\nexport const NavButons = styled(NavLink)`\n  padding: 10px;\n  margin-top: 20px;\n  margin-bottom: 20;\n  text-decoration: none;\n  font-size: 30px;\n  font-weight: 700;\n  color: #000000;\n  text-align: center;\n  border: 2px solid #000000;\n  /* background-color: tomato; */\n  border-radius: 10px;\n\n  :hover,\n  :focus {\n    border: 2px solid orange;\n    background-color: orange;\n    color: #ffffff;\n  }\n\n  &.active {\n    color: #ffffff;\n    background-color: orange;\n  }\n`;\n\nexport const MovieDetailsButtons = styled.div`\n  display: flex;\n  gap: 10px;\n  a {\n    text-decoration: none;\n    list-style: none;\n    color: #000000;\n  }\n`;\n\nexport const BackButon = styled(NavLink)`\n  display: inline-block;\n  padding: 10px;\n  margin-top: 20px;\n  margin-bottom: 20;\n  text-decoration: none;\n  font-size: 30px;\n  font-weight: 700;\n  color: #000000;\n  text-align: center;\n  border: 2px solid #000000;\n  /* background-color: tomato; */\n  border-radius: 10px;\n\n  :hover,\n  :focus {\n    border: 2px solid orange;\n\n    background-color: orange;\n    color: #ffffff;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  width: 100%;\n  margin: 0;\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  gap: 40px;\n  margin-bottom: 30px;\n`;\n\nexport const MovieTitleLink = styled.a`\n  display: table;\n  /* max-width: 60%; */\n  margin: 0 auto;\n  text-decoration: none;\n  /* background-color: #ccc; */\n`;\n\nexport const MovieTitle = styled.span`\n  display: block;\n  font-size: 50px;\n  font-weight: 700;\n  color: #000000;\n  text-align: center;\n  padding: 20px;\n  margin: 20px;\n\n  :hover,\n  :focus {\n    /* border: 3px solid orange; */\n    border-radius: 20px;\n    background-color: orange;\n    color: #ffffff;\n  }\n`;\n\nexport const MovieImage = styled.img`\n  display: block;\n`;\n\nexport const ListTitle = styled.p`\n  margin: 0;\n  font-size: 30px;\n  font-weight: 700;\n`;\n\nexport const MovieList = styled.ul`\n  margin: 0 0 30px 0;\n  padding-left: 10px;\n  list-style: none;\n  font-size: 25px;\n`;\n","import {\n  Wrapper,\n  Container,\n  MovieTitle,\n  MovieTitleLink,\n  MovieImage,\n  MovieList,\n  ListTitle,\n} from './MovieCard.styled';\n\nconst MovieCard = ({ movie }) => {\n  const {\n    original_title,\n    homepage,\n    poster_path,\n    overview,\n    genres,\n    budget,\n    production_countries,\n  } = movie;\n\n  console.log(movie);\n\n  return (\n    <Wrapper>\n      <MovieTitleLink href={homepage}>\n        <MovieTitle>{original_title}</MovieTitle>\n      </MovieTitleLink>\n      <Container>\n        {poster_path ? (\n          <MovieImage\n            src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n            alt={original_title}\n          />\n        ) : (\n          <MovieImage\n            src=\"https://via.placeholder.com/500x750\"\n            alt={original_title}\n          />\n        )}\n\n        <div>\n          <ListTitle>\n            Genres\n            {/* {genres.map(({ name }) => (\n              <p>{name}</p>\n            ))} */}\n          </ListTitle>\n          <MovieList>\n            {genres.map(genre => (\n              <li key={genre.name}>{genre.name}</li>\n            ))}\n          </MovieList>\n\n          <ListTitle>Budget</ListTitle>\n          <MovieList>\n            <li>${budget}</li>\n          </MovieList>\n\n          <ListTitle>Country</ListTitle>\n          <MovieList>\n            {production_countries.map(country => (\n              <li key={country.name}>{country.name}</li>\n            ))}\n          </MovieList>\n\n          <ListTitle>Overview</ListTitle>\n          <MovieList>\n            <li>{overview}</li>\n          </MovieList>\n        </div>\n      </Container>\n    </Wrapper>\n  );\n};\n\nexport default MovieCard;\n","import * as API from '../API';\nimport { Outlet, useParams, useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport {\n  NavButons,\n  MovieDetailsButtons,\n  Wrapper,\n  BackButon,\n} from 'Pages/MovieDetails.styled';\nimport MovieCard from 'components/MovieCard';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState();\n  const location = useLocation();\n\n  const backLink = location.state?.from ?? '/';\n\n  // console.log('MovieDetails location===> ', location);\n  // console.log('MovieDetails backLink===> ', backLink);\n\n  useEffect(() => {\n    API.getMovieDetailsById(movieId).then(setMovie);\n  }, [movieId]);\n\n  if (!movie) {\n    return;\n  }\n\n  return (\n    <Wrapper>\n      <BackButon to={backLink}>BACK</BackButon>\n      <MovieCard movie={movie}></MovieCard>\n      <MovieDetailsButtons>\n        <NavButons to=\"cast\" state={{ from: backLink }}>\n          Cast\n        </NavButons>\n        <NavButons to=\"reviews\" state={{ from: backLink }}>\n          Reviews\n        </NavButons>\n      </MovieDetailsButtons>\n      <Outlet />\n    </Wrapper>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["API_OPTIONS","axios","getTrendingMovies","mediaType","period","searchUrl","response","results","data","getMovieDetailsById","movieId","getMovieCastById","cast","getMovieReviewsById","getMovieByName","query","Wrapper","styled","NavButons","NavLink","MovieDetailsButtons","BackButon","Container","MovieTitleLink","MovieTitle","MovieImage","ListTitle","MovieList","movie","original_title","homepage","poster_path","overview","genres","budget","production_countries","console","log","href","src","alt","map","genre","name","country","useParams","useState","setMovie","backLink","useLocation","state","from","useEffect","API","then","to"],"sourceRoot":""}