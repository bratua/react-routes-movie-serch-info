{"version":3,"file":"static/js/893.6d2d34fd.chunk.js","mappings":"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","sources":["API/API.jsx","Pages/Movies.styled.jsx","components/SearchBox/SearchBox.styled.jsx","components/SearchBox/SearchBox.jsx","Pages/Movies.js","components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_OPTIONS = {\n  apiKey: 'bcb23eb0e57eead85fe68d64f412ef39',\n  apiBaseUrl: 'https://api.themoviedb.org/3/',\n};\n\naxios.defaults.baseURL = API_OPTIONS.apiBaseUrl;\n\nexport const getTrendingMovies = async (mediaType, period) => {\n  const searchUrl = `trending/${mediaType}/${period}?api_key=${API_OPTIONS.apiKey}`;\n  const response = await axios.get(searchUrl);\n  const results = response.data.results;\n  //   console.log(results);\n\n  return results;\n};\n\nexport const getMovieDetailsById = async movieId => {\n  const searchUrl = `movie/${movieId}?api_key=${API_OPTIONS.apiKey}`;\n  const response = await axios.get(searchUrl);\n  const results = response.data;\n  //   console.log('API getMovieById  ==> ', response.data);\n\n  return results;\n};\n\nexport const getMovieCastById = async movieId => {\n  const searchUrl = `movie/${movieId}/credits?api_key=${API_OPTIONS.apiKey}`;\n  const response = await axios.get(searchUrl);\n  const results = response.data.cast;\n  // console.log('API getMovieCreditsById  ==> ', results);\n\n  return results;\n};\n\nexport const getMovieReviewsById = async movieId => {\n  const searchUrl = `movie/${movieId}/reviews?api_key=${API_OPTIONS.apiKey}`;\n  const response = await axios.get(searchUrl);\n  const results = response.data.results;\n  // console.log('API getMovieReviewsById  ==> ', results);\n\n  return results;\n};\n\nexport const getMovieByName = async query => {\n  const searchUrl = `search/movie?api_key=${API_OPTIONS.apiKey}&query=${query}`;\n  const response = await axios.get(searchUrl);\n  const results = response.data.results;\n  // console.log('API getMovieByName  ==> ', results);\n\n  return results;\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  margin: 0px;\n`;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  margin: 0px;\n`;\n\nexport const SearchField = styled.input`\n  font-size: 40px;\n  border: 3px solid #000000;\n  border-radius: 10px;\n`;\n","import { Wrapper, SearchField } from './SearchBox.styled';\n\nconst SearchBox = ({ value, onChange }) => {\n  return (\n    <Wrapper>\n      <SearchField\n        type=\"text\"\n        value={value}\n        onChange={e => onChange(e.target.value)}\n        placeholder=\"Input search query\"\n      ></SearchField>\n    </Wrapper>\n  );\n};\nexport default SearchBox;\n","import { useSearchParams, useLocation } from 'react-router-dom';\nimport * as API from '../API';\n\nimport { Wrapper } from 'Pages/Movies.styled.jsx';\nimport { useMemo, useState, useEffect } from 'react';\nimport SearchBox from 'components/SearchBox';\nimport MoviesList from 'components/MoviesList';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [serchedMovies, setSerchedMovies] = useState([]);\n  const location = useLocation();\n\n  //! --- get all search params\n  const allSearchParams = useMemo(\n    () => Object.fromEntries([...searchParams]),\n    [searchParams]\n  );\n  const { query } = allSearchParams;\n\n  // если в name будет undefuned или null то присваиваем пустую строку\n  const movieName = query ?? '';\n  //! --- get all search params\n\n  const changeQuerySearch = query => {\n    const newSearchQuery = query !== '' ? { query } : {};\n    setSearchParams(newSearchQuery);\n  };\n\n  useEffect(() => {\n    if (movieName === '') return;\n    API.getMovieByName(movieName.toLowerCase()).then(setSerchedMovies);\n  }, [movieName]);\n\n  //   console.log('movieName', movieName);\n  //   console.log('search result', serchedMovies);\n\n  return (\n    <main>\n      <Wrapper>\n        <h1>Movies search page</h1>\n        <SearchBox value={movieName} onChange={changeQuerySearch} />\n\n        {movieName !== '' && (\n          <MoviesList movies={serchedMovies} state={{ from: location }} />\n        )}\n      </Wrapper>\n    </main>\n  );\n};\nexport default Movies;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  /* margin: 10px; */\n  margin: 0;\n`;\n\nexport const List = styled.ul`\n  padding: 0;\n  font-size: 30px;\n  display: flex;\n  flex-wrap: wrap;\n  /* flex-direction: column; */\n  gap: 20px;\n\n  text-align: center;\n`;\n\nexport const ListItem = styled.li`\n  width: 200px;\n  list-style: none;\n\n  a {\n    text-decoration: none;\n    color: #000000;\n  }\n`;\n\nexport const Item = styled.div`\n  /* display: flex;\n  gap: 20px;\n  align-items: center; */\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport {\n  Wrapper,\n  List,\n  ListItem,\n  Item,\n} from 'components/MoviesList/MoviesList.styled';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n  const path = location.pathname === '/' ? `movies/` : ``;\n\n  return (\n    <Wrapper>\n      <List>\n        {movies.map(({ id, original_title, poster_path }) => {\n          return (\n            <ListItem key={id}>\n              <Link to={`${path}${id}`} state={{ from: location }}>\n                <Item>\n                  {poster_path ? (\n                    <img\n                      src={`https://image.tmdb.org/t/p/w200/${poster_path}`}\n                      alt={original_title}\n                    />\n                  ) : (\n                    <img\n                      src=\"https://via.placeholder.com/200x300\"\n                      alt={original_title}\n                    />\n                  )}\n                  <span>{original_title}</span>\n                </Item>\n              </Link>\n            </ListItem>\n          );\n        })}\n      </List>\n    </Wrapper>\n  );\n};\nexport default MoviesList;\n"],"names":["API_OPTIONS","axios","getTrendingMovies","mediaType","period","searchUrl","response","results","data","getMovieDetailsById","movieId","getMovieCastById","cast","getMovieReviewsById","getMovieByName","query","Wrapper","styled","SearchField","value","onChange","type","e","target","placeholder","useSearchParams","searchParams","setSearchParams","useState","serchedMovies","setSerchedMovies","location","useLocation","useMemo","Object","fromEntries","movieName","useEffect","API","toLowerCase","then","MoviesList","movies","state","from","List","ListItem","Item","path","pathname","map","id","original_title","poster_path","to","src","alt"],"sourceRoot":""}