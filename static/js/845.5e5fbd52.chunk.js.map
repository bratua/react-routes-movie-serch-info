{"version":3,"file":"static/js/845.5e5fbd52.chunk.js","mappings":"2TAEMA,EACI,mCADJA,EAEQ,gCAGdC,EAAAA,EAAAA,SAAAA,QAAyBD,EAElB,IAAME,EAAiB,mCAAG,WAAOC,EAAWC,GAAlB,kFACzBC,EADyB,mBACDF,EADC,YACYC,EADZ,oBAC8BJ,GAD9B,SAERC,EAAAA,EAAAA,IAAUI,GAFF,cAEzBC,EAFyB,OAGzBC,EAAUD,EAASE,KAAKD,QAHC,kBAMxBA,GANwB,2CAAH,wDASjBE,EAAmB,mCAAG,WAAMC,GAAN,kFAC3BL,EAD2B,gBACNK,EADM,oBACaV,GADb,SAEVC,EAAAA,EAAAA,IAAUI,GAFA,cAE3BC,EAF2B,OAG3BC,EAAUD,EAASE,KAHQ,kBAM1BD,GAN0B,2CAAH,sDASnBI,EAAgB,mCAAG,WAAMD,GAAN,kFACxBL,EADwB,gBACHK,EADG,4BACwBV,GADxB,SAEPC,EAAAA,EAAAA,IAAUI,GAFH,cAExBC,EAFwB,OAGxBC,EAAUD,EAASE,KAAKI,KAHA,kBAMvBL,GANuB,2CAAH,sDAShBM,EAAmB,mCAAG,WAAMH,GAAN,kFAC3BL,EAD2B,gBACNK,EADM,4BACqBV,GADrB,SAEVC,EAAAA,EAAAA,IAAUI,GAFA,cAE3BC,EAF2B,OAG3BC,EAAUD,EAASE,KAAKD,QAHG,kBAM1BA,GAN0B,2CAAH,sDASnBO,EAAc,mCAAG,WAAMC,GAAN,kFACtBV,EADsB,+BACcL,EADd,kBAC0Ce,GAD1C,SAELd,EAAAA,EAAAA,IAAUI,GAFL,cAEtBC,EAFsB,OAGtBC,EAAUD,EAASE,KAAKD,QAHF,kBAMrBA,GANqB,2CAAH,qD,8ECpB3B,UArBa,WACX,OAA0CS,EAAAA,EAAAA,UAAS,IAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KAMA,IAJAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAAsB,QAAS,OAAOC,KAAKH,EAC5C,GAAE,IAEED,EAML,OACE,6BACE,4CACA,SAAC,IAAD,CAAYK,OAAQL,MAGzB,C,oGCrBYM,EAAUC,EAAAA,GAAAA,IAAH,6DAKPC,EAAOD,EAAAA,GAAAA,GAAH,yKAWJE,EAAWF,EAAAA,GAAAA,GAAH,6HAURG,EAAOH,EAAAA,GAAAA,IAAH,sF,SCajB,EAjCmB,SAAC,GAAgB,IAAdF,EAAa,EAAbA,OACdM,GAAWC,EAAAA,EAAAA,MACXC,EAA6B,MAAtBF,EAASG,SAAT,aAEb,OACE,SAACR,EAAD,WACE,SAACE,EAAD,UACGH,EAAOU,KAAI,YAA0C,IAAvCC,EAAsC,EAAtCA,GAAIC,EAAkC,EAAlCA,eAAgBC,EAAkB,EAAlBA,YACjC,OACE,SAACT,EAAD,WACE,SAAC,KAAD,CAAMU,GAAE,UAAKN,GAAL,OAAYG,GAAMI,MAAO,CAAEC,KAAMV,GAAzC,UACE,UAACD,EAAD,WACGQ,GACC,gBACEI,IAAG,0CAAqCJ,GACxCK,IAAKN,KAGP,gBACEK,IAAI,sCACJC,IAAKN,KAGT,0BAAOA,UAdED,EAmBlB,OAIR,C","sources":["API/API.jsx","Pages/Home.js","components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_OPTIONS = {\n  apiKey: 'bcb23eb0e57eead85fe68d64f412ef39',\n  apiBaseUrl: 'https://api.themoviedb.org/3/',\n};\n\naxios.defaults.baseURL = API_OPTIONS.apiBaseUrl;\n\nexport const getTrendingMovies = async (mediaType, period) => {\n  const searchUrl = `trending/${mediaType}/${period}?api_key=${API_OPTIONS.apiKey}`;\n  const response = await axios.get(searchUrl);\n  const results = response.data.results;\n  //   console.log(results);\n\n  return results;\n};\n\nexport const getMovieDetailsById = async movieId => {\n  const searchUrl = `movie/${movieId}?api_key=${API_OPTIONS.apiKey}`;\n  const response = await axios.get(searchUrl);\n  const results = response.data;\n  //   console.log('API getMovieById  ==> ', response.data);\n\n  return results;\n};\n\nexport const getMovieCastById = async movieId => {\n  const searchUrl = `movie/${movieId}/credits?api_key=${API_OPTIONS.apiKey}`;\n  const response = await axios.get(searchUrl);\n  const results = response.data.cast;\n  // console.log('API getMovieCreditsById  ==> ', results);\n\n  return results;\n};\n\nexport const getMovieReviewsById = async movieId => {\n  const searchUrl = `movie/${movieId}/reviews?api_key=${API_OPTIONS.apiKey}`;\n  const response = await axios.get(searchUrl);\n  const results = response.data.results;\n  // console.log('API getMovieReviewsById  ==> ', results);\n\n  return results;\n};\n\nexport const getMovieByName = async query => {\n  const searchUrl = `search/movie?api_key=${API_OPTIONS.apiKey}&query=${query}`;\n  const response = await axios.get(searchUrl);\n  const results = response.data.results;\n  // console.log('API getMovieByName  ==> ', results);\n\n  return results;\n};\n","import { useState, useEffect } from 'react';\nimport * as API from '../API';\nimport MoviesList from 'components/MoviesList';\n\nconst Home = () => {\n  const [popularMovies, setPopularMovies] = useState([]);\n\n  useEffect(() => {\n    API.getTrendingMovies('movie', 'day').then(setPopularMovies);\n  }, []);\n\n  if (!popularMovies) {\n    return;\n  }\n\n  // console.log('MOVIES = HOME ', movies);\n\n  return (\n    <main>\n      <h1>Popular Movies</h1>\n      <MoviesList movies={popularMovies} />\n    </main>\n  );\n};\n\nexport default Home;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  /* margin: 10px; */\n  margin: 0;\n`;\n\nexport const List = styled.ul`\n  padding: 0;\n  font-size: 30px;\n  display: flex;\n  flex-wrap: wrap;\n  /* flex-direction: column; */\n  gap: 20px;\n\n  text-align: center;\n`;\n\nexport const ListItem = styled.li`\n  width: 200px;\n  list-style: none;\n\n  a {\n    text-decoration: none;\n    color: #000000;\n  }\n`;\n\nexport const Item = styled.div`\n  /* display: flex;\n  gap: 20px;\n  align-items: center; */\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport {\n  Wrapper,\n  List,\n  ListItem,\n  Item,\n} from 'components/MoviesList/MoviesList.styled';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n  const path = location.pathname === '/' ? `movies/` : ``;\n\n  return (\n    <Wrapper>\n      <List>\n        {movies.map(({ id, original_title, poster_path }) => {\n          return (\n            <ListItem key={id}>\n              <Link to={`${path}${id}`} state={{ from: location }}>\n                <Item>\n                  {poster_path ? (\n                    <img\n                      src={`https://image.tmdb.org/t/p/w200/${poster_path}`}\n                      alt={original_title}\n                    />\n                  ) : (\n                    <img\n                      src=\"https://via.placeholder.com/200x300\"\n                      alt={original_title}\n                    />\n                  )}\n                  <span>{original_title}</span>\n                </Item>\n              </Link>\n            </ListItem>\n          );\n        })}\n      </List>\n    </Wrapper>\n  );\n};\nexport default MoviesList;\n"],"names":["API_OPTIONS","axios","getTrendingMovies","mediaType","period","searchUrl","response","results","data","getMovieDetailsById","movieId","getMovieCastById","cast","getMovieReviewsById","getMovieByName","query","useState","popularMovies","setPopularMovies","useEffect","API","then","movies","Wrapper","styled","List","ListItem","Item","location","useLocation","path","pathname","map","id","original_title","poster_path","to","state","from","src","alt"],"sourceRoot":""}