{"version":3,"file":"static/js/268.58ac4c8c.chunk.js","mappings":"2TAEMA,EACI,mCADJA,EAEQ,gCAGdC,EAAAA,EAAAA,SAAAA,QAAyBD,EAElB,IAAME,EAAiB,mCAAG,WAAOC,EAAWC,GAAlB,kFACzBC,EADyB,mBACDF,EADC,YACYC,EADZ,oBAC8BJ,GAD9B,SAERC,EAAAA,EAAAA,IAAUI,GAFF,cAEzBC,EAFyB,OAGzBC,EAAUD,EAASE,KAAKD,QAHC,kBAMxBA,GANwB,2CAAH,wDASjBE,EAAmB,mCAAG,WAAMC,GAAN,kFAC3BL,EAD2B,gBACNK,EADM,oBACaV,GADb,SAEVC,EAAAA,EAAAA,IAAUI,GAFA,cAE3BC,EAF2B,OAG3BC,EAAUD,EAASE,KAHQ,kBAM1BD,GAN0B,2CAAH,sDASnBI,EAAgB,mCAAG,WAAMD,GAAN,kFACxBL,EADwB,gBACHK,EADG,4BACwBV,GADxB,SAEPC,EAAAA,EAAAA,IAAUI,GAFH,cAExBC,EAFwB,OAGxBC,EAAUD,EAASE,KAAKI,KAHA,kBAMvBL,GANuB,2CAAH,sDAShBM,EAAmB,mCAAG,WAAMH,GAAN,kFAC3BL,EAD2B,gBACNK,EADM,4BACqBV,GADrB,SAEVC,EAAAA,EAAAA,IAAUI,GAFA,cAE3BC,EAF2B,OAG3BC,EAAUD,EAASE,KAAKD,QAHG,kBAM1BA,GAN0B,2CAAH,sDASnBO,EAAc,mCAAG,WAAMC,GAAN,kFACtBV,EADsB,+BACcL,EADd,kBAC0Ce,GAD1C,SAELd,EAAAA,EAAAA,IAAUI,GAFL,cAEtBC,EAFsB,OAGtBC,EAAUD,EAASE,KAAKD,QAHF,kBAMrBA,GANqB,2CAAH,qD,0IC3CdS,EAAUC,EAAAA,GAAAA,IAAH,yCAWPC,GAPQD,EAAAA,GAAAA,GAAH,8FAOMA,EAAAA,GAAAA,GAAH,qHASRE,EAAeF,EAAAA,GAAAA,GAAH,qHAOZG,EAAYH,EAAAA,GAAAA,EAAH,2JASTI,EAAiBJ,EAAAA,GAAAA,EAAH,yHAQdK,EAAaL,EAAAA,GAAAA,IAAH,kE,SCZvB,EAzBiB,SAAC,GAAc,IAAZL,EAAW,EAAXA,KAClB,OACE,SAACI,EAAD,WACE,SAACE,EAAD,UACGN,EAAKW,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,UAAWC,EAAxB,EAAwBA,aAAxB,OACR,UAACR,EAAD,WACGQ,GACC,SAACL,EAAD,CACEM,IAAG,0CAAqCD,GACxCE,IAAKJ,KAGP,SAACH,EAAD,CACEM,IAAI,sCACJC,IAAKJ,KAGT,SAACL,EAAD,UAAYK,KACZ,UAACJ,EAAD,eAAkBK,EAAlB,SAbiBF,EADX,OAoBjB,ECZD,EAhBa,WACX,OAAwBM,EAAAA,EAAAA,UAAS,IAAjC,eAAOlB,EAAP,KAAamB,EAAb,KACQrB,GAAYsB,EAAAA,EAAAA,MAAZtB,QAMR,IAJAuB,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAAqBxB,GAASyB,KAAKJ,EACpC,GAAE,CAACrB,IAECE,EAML,OAAO,SAAC,EAAD,CAAUA,KAAMA,GACxB,C","sources":["API/API.jsx","components/CastCard/CastCard.styled.jsx","components/CastCard/CastCard.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_OPTIONS = {\n  apiKey: 'bcb23eb0e57eead85fe68d64f412ef39',\n  apiBaseUrl: 'https://api.themoviedb.org/3/',\n};\n\naxios.defaults.baseURL = API_OPTIONS.apiBaseUrl;\n\nexport const getTrendingMovies = async (mediaType, period) => {\n  const searchUrl = `trending/${mediaType}/${period}?api_key=${API_OPTIONS.apiKey}`;\n  const response = await axios.get(searchUrl);\n  const results = response.data.results;\n  //   console.log(results);\n\n  return results;\n};\n\nexport const getMovieDetailsById = async movieId => {\n  const searchUrl = `movie/${movieId}?api_key=${API_OPTIONS.apiKey}`;\n  const response = await axios.get(searchUrl);\n  const results = response.data;\n  //   console.log('API getMovieById  ==> ', response.data);\n\n  return results;\n};\n\nexport const getMovieCastById = async movieId => {\n  const searchUrl = `movie/${movieId}/credits?api_key=${API_OPTIONS.apiKey}`;\n  const response = await axios.get(searchUrl);\n  const results = response.data.cast;\n  // console.log('API getMovieCreditsById  ==> ', results);\n\n  return results;\n};\n\nexport const getMovieReviewsById = async movieId => {\n  const searchUrl = `movie/${movieId}/reviews?api_key=${API_OPTIONS.apiKey}`;\n  const response = await axios.get(searchUrl);\n  const results = response.data.results;\n  // console.log('API getMovieReviewsById  ==> ', results);\n\n  return results;\n};\n\nexport const getMovieByName = async query => {\n  const searchUrl = `search/movie?api_key=${API_OPTIONS.apiKey}&query=${query}`;\n  const response = await axios.get(searchUrl);\n  const results = response.data.results;\n  // console.log('API getMovieByName  ==> ', results);\n\n  return results;\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  margin: 10px;\n`;\n\nexport const Title = styled.h3`\n  padding: 0;\n  margin: 0;\n  font-size: 40px;\n  font-weight: 700;\n`;\n\nexport const CastList = styled.ul`\n  padding: 0;\n  margin: 20px 0 0 0;\n\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n`;\n\nexport const CastListItem = styled.li`\n  list-style: none;\n  padding: 20px;\n  background-color: #dfdfdf;\n  border-radius: 10px;\n`;\n\nexport const ActorName = styled.p`\n  width: 198px;\n  margin: 0;\n  font-size: 20px;\n  text-decoration-line: underline;\n  font-weight: 700;\n  text-align: center;\n`;\n\nexport const ActorCharacter = styled.p`\n  width: 180px;\n  margin: 0;\n  font-size: 18px;\n  font-style: italic;\n  text-align: center;\n`;\n\nexport const ActorPhoto = styled.img`\n  display: block;\n  margin-bottom: 5px;\n`;\n","import {\n  Wrapper,\n  CastList,\n  CastListItem,\n  ActorName,\n  ActorCharacter,\n  ActorPhoto,\n} from 'components/CastCard/CastCard.styled';\n\nconst CastCard = ({ cast }) => {\n  return (\n    <Wrapper>\n      <CastList>\n        {cast.map(({ id, name, character, profile_path }) => (\n          <CastListItem key={id}>\n            {profile_path ? (\n              <ActorPhoto\n                src={`https://image.tmdb.org/t/p/w200/${profile_path}`}\n                alt={name}\n              />\n            ) : (\n              <ActorPhoto\n                src=\"https://via.placeholder.com/200x300\"\n                alt={name}\n              />\n            )}\n            <ActorName>{name}</ActorName>\n            <ActorCharacter>({character})</ActorCharacter>\n          </CastListItem>\n        ))}\n      </CastList>\n    </Wrapper>\n  );\n};\nexport default CastCard;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport * as API from '../../API';\nimport CastCard from 'components/CastCard';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    API.getMovieCastById(movieId).then(setCast);\n  }, [movieId]);\n\n  if (!cast) {\n    return;\n  }\n\n  // console.log('Cast ===> ', cast);\n\n  return <CastCard cast={cast} />;\n};\nexport default Cast;\n"],"names":["API_OPTIONS","axios","getTrendingMovies","mediaType","period","searchUrl","response","results","data","getMovieDetailsById","movieId","getMovieCastById","cast","getMovieReviewsById","getMovieByName","query","Wrapper","styled","CastList","CastListItem","ActorName","ActorCharacter","ActorPhoto","map","id","name","character","profile_path","src","alt","useState","setCast","useParams","useEffect","API","then"],"sourceRoot":""}