{"version":3,"file":"static/js/8.c5ae312f.chunk.js","mappings":"yTAEMA,EACI,mCADJA,EAEQ,gCAGdC,EAAAA,EAAAA,SAAAA,QAAyBD,EAElB,IAAME,EAAiB,mCAAG,WAAOC,EAAWC,GAAlB,kFACzBC,EADyB,mBACDF,EADC,YACYC,EADZ,oBAC8BJ,GAD9B,SAERC,EAAAA,EAAAA,IAAUI,GAFF,cAEzBC,EAFyB,OAGzBC,EAAUD,EAASE,KAAKD,QAHC,kBAMxBA,GANwB,2CAAH,wDASjBE,EAAmB,mCAAG,WAAMC,GAAN,kFAC3BL,EAD2B,gBACNK,EADM,oBACaV,GADb,SAEVC,EAAAA,EAAAA,IAAUI,GAFA,cAE3BC,EAF2B,OAG3BC,EAAUD,EAASE,KAHQ,kBAM1BD,GAN0B,2CAAH,sDASnBI,EAAgB,mCAAG,WAAMD,GAAN,kFACxBL,EADwB,gBACHK,EADG,4BACwBV,GADxB,SAEPC,EAAAA,EAAAA,IAAUI,GAFH,cAExBC,EAFwB,OAGxBC,EAAUD,EAASE,KAAKI,KAHA,kBAMvBL,GANuB,2CAAH,sDAShBM,EAAmB,mCAAG,WAAMH,GAAN,kFAC3BL,EAD2B,gBACNK,EADM,4BACqBV,GADrB,SAEVC,EAAAA,EAAAA,IAAUI,GAFA,cAE3BC,EAF2B,OAG3BC,EAAUD,EAASE,KAAKD,QAHG,kBAM1BA,GAN0B,2CAAH,sDASnBO,EAAc,mCAAG,WAAMC,GAAN,kFACtBV,EADsB,+BACcL,EADd,kBAC0Ce,GAD1C,SAELd,EAAAA,EAAAA,IAAUI,GAFL,cAEtBC,EAFsB,OAGtBC,EAAUD,EAASE,KAAKD,QAHF,kBAMrBA,GANqB,2CAAH,qD,wIC3CdS,EAAUC,EAAAA,GAAAA,IAAH,yCAWPC,GAPQD,EAAAA,GAAAA,GAAH,8FAOQA,EAAAA,GAAAA,GAAH,sDAKVE,EAAiBF,EAAAA,GAAAA,GAAH,0MAWdG,EAAeH,EAAAA,GAAAA,EAAH,2GAOZI,EAAaJ,EAAAA,GAAAA,EAAH,8GAOVK,EAAaL,EAAAA,GAAAA,EAAH,sF,SCdvB,EApBoB,SAAC,GAAiB,IAAfM,EAAc,EAAdA,QACrB,OACE,SAACP,EAAD,WAEE,SAACE,EAAD,UACGK,EAAQC,KAAI,YAAsC,IAAnCC,EAAkC,EAAlCA,OAAQC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,WACzBC,EAAqB,IAAIC,KAAKF,GAAYG,qBAChD,OACE,UAACX,EAAD,YACE,SAACC,EAAD,UAAeK,KACf,SAACJ,EAAD,UAAaO,KACb,SAACN,EAAD,UAAaI,MAHMC,EAMxB,OAIR,ECPD,EAfgB,WACd,OAA8BI,EAAAA,EAAAA,UAAS,IAAvC,eAAOR,EAAP,KAAgBS,EAAhB,KACQtB,GAAYuB,EAAAA,EAAAA,MAAZvB,QAMR,IAJAwB,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAAwBzB,GAAS0B,KAAKJ,EACvC,GAAE,CAACtB,IAECa,EAIL,OAAO,SAAC,EAAD,CAAaA,QAASA,GAC9B,C","sources":["API/API.jsx","components/ReviewsCard/ReviewsCard.styled.jsx","components/ReviewsCard/ReviewsCard.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_OPTIONS = {\n  apiKey: 'bcb23eb0e57eead85fe68d64f412ef39',\n  apiBaseUrl: 'https://api.themoviedb.org/3/',\n};\n\naxios.defaults.baseURL = API_OPTIONS.apiBaseUrl;\n\nexport const getTrendingMovies = async (mediaType, period) => {\n  const searchUrl = `trending/${mediaType}/${period}?api_key=${API_OPTIONS.apiKey}`;\n  const response = await axios.get(searchUrl);\n  const results = response.data.results;\n  //   console.log(results);\n\n  return results;\n};\n\nexport const getMovieDetailsById = async movieId => {\n  const searchUrl = `movie/${movieId}?api_key=${API_OPTIONS.apiKey}`;\n  const response = await axios.get(searchUrl);\n  const results = response.data;\n  //   console.log('API getMovieById  ==> ', response.data);\n\n  return results;\n};\n\nexport const getMovieCastById = async movieId => {\n  const searchUrl = `movie/${movieId}/credits?api_key=${API_OPTIONS.apiKey}`;\n  const response = await axios.get(searchUrl);\n  const results = response.data.cast;\n  // console.log('API getMovieCreditsById  ==> ', results);\n\n  return results;\n};\n\nexport const getMovieReviewsById = async movieId => {\n  const searchUrl = `movie/${movieId}/reviews?api_key=${API_OPTIONS.apiKey}`;\n  const response = await axios.get(searchUrl);\n  const results = response.data.results;\n  // console.log('API getMovieReviewsById  ==> ', results);\n\n  return results;\n};\n\nexport const getMovieByName = async query => {\n  const searchUrl = `search/movie?api_key=${API_OPTIONS.apiKey}&query=${query}`;\n  const response = await axios.get(searchUrl);\n  const results = response.data.results;\n  // console.log('API getMovieByName  ==> ', results);\n\n  return results;\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  margin: 10px;\n`;\n\nexport const Title = styled.h3`\n  padding: 0;\n  margin: 0;\n  font-size: 40px;\n  font-weight: 700;\n`;\n\nexport const ReviewList = styled.ul`\n  padding: 0;\n  margin: 0;\n`;\n\nexport const ReviewListItem = styled.li`\n  list-style: none;\n  margin-top: 20px;\n  padding: 20px;\n  background-color: #dfdfdf;\n  border-radius: 10px;\n  /* :nth-child(odd) {\n    background-color: #dfdfdf;\n  } */\n`;\n\nexport const ReviewAuthor = styled.p`\n  margin-top: 0;\n  margin-bottom: 10px;\n  font-size: 25px;\n  font-weight: 700;\n`;\n\nexport const ReviewDate = styled.p`\n  margin-top: 0;\n  margin-bottom: 10px;\n  font-weight: 700;\n  font-style: italic;\n`;\n\nexport const ReviewText = styled.p`\n  margin-top: 0;\n  margin-bottom: 10px;\n  font-size: 20px;\n`;\n","import {\n  Wrapper,\n  ReviewList,\n  ReviewListItem,\n  ReviewAuthor,\n  ReviewDate,\n  ReviewText,\n} from 'components/ReviewsCard/ReviewsCard.styled';\n\nconst ReviewsCard = ({ reviews }) => {\n  return (\n    <Wrapper>\n      {/* <Title>Reviews:</Title> */}\n      <ReviewList>\n        {reviews.map(({ author, content, created_at }) => {\n          const localDateNormalize = new Date(created_at).toLocaleDateString();\n          return (\n            <ReviewListItem key={created_at}>\n              <ReviewAuthor>{author}</ReviewAuthor>\n              <ReviewDate>{localDateNormalize}</ReviewDate>\n              <ReviewText>{content}</ReviewText>\n            </ReviewListItem>\n          );\n        })}\n      </ReviewList>\n    </Wrapper>\n  );\n};\n\nexport default ReviewsCard;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport * as API from '../../API';\nimport ReviewsCard from 'components/ReviewsCard';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    API.getMovieReviewsById(movieId).then(setReviews);\n  }, [movieId]);\n\n  if (!reviews) {\n    return;\n  }\n\n  return <ReviewsCard reviews={reviews} />;\n};\n\nexport default Reviews;\n"],"names":["API_OPTIONS","axios","getTrendingMovies","mediaType","period","searchUrl","response","results","data","getMovieDetailsById","movieId","getMovieCastById","cast","getMovieReviewsById","getMovieByName","query","Wrapper","styled","ReviewList","ReviewListItem","ReviewAuthor","ReviewDate","ReviewText","reviews","map","author","content","created_at","localDateNormalize","Date","toLocaleDateString","useState","setReviews","useParams","useEffect","API","then"],"sourceRoot":""}